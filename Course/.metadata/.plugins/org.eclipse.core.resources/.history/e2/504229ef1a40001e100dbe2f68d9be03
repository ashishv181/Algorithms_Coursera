package week1.unionFind;

public class QuickUnion extends UF{
	/**
	 * Initializes the {@code array} with the size provided by the client.
	 * 
	 */
	public QuickUnion(int N) {
		super(N);
	}

	/**
	 * Finds out the roots of the two parameters and then checks if the roots are equal.
	 * For the elements to be connected, the roots need to be equal
	 * 
	 * @param two indexes {@code p} {@code q} whose link has to be checked
	 * @return {@code true} if the two points are connected, {@code false} if not
	 *         connected
	 */
	@Override
	boolean connected(int p, int q) {
		return root(p)== root(q);
	}

	/**
	 * Finds out the roots of both the indexes and assigns the root value of {@code p} to the {@code array[q]} 
	 * thus making {@code q} the child of {@code p}
	 * 
	 */
	@Override
	void union(int p, int q) {
		arr[root(q)] = root(p);
	}

	
	/**
	 * 
	 * @param index for which the root has to be found
	 * @return the final index which is the root of the passed paramenter index
	 */
	int root(int index) {
		while(arr[index] != index) {
			index = arr[index];
		}
		return index;
	}

}
